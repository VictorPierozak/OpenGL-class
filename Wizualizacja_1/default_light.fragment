#version 330 core
in vec3 Color;
in vec3 Normal;
in vec3 FragPos;

out vec4 outColor;
uniform vec3 lightPos;
uniform float brigthness;
uniform vec3 diffColor;


void main()
{
float ambientStrength = 0.2;
float specularStrength = 0.5;

vec3 ambientlightColor = vec3(1.0, 1.0, 1.0);
vec4 ambient = ambientStrength * vec4(ambientlightColor, 1.0);
vec3 difflightColor = diffColor;
vec3 norm = normalize(Normal);
vec3 lightDir = normalize(lightPos - FragPos);
float diff = max(dot(norm, lightDir), 0.0);
vec3 diffuse = brigthness * diff* difflightColor;

outColor=(ambient+vec4(diffuse,1.0))*vec4(Color, 1.0);
}